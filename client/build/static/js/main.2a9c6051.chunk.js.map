{"version":3,"sources":["utils/reducers.js","utils/actions.js","utils/GlobalState.js","utils/helpers.js","components/BookItem/index.js","utils/queries.js","components/BookList/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","pages/OrderHistory.js","pages/Success.js","components/FilterMenu/index.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","books","filters","currentFilter","cart","book","newState","filter","_id","map","purchaseQuantity","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","BookItem","item","image","price","description","name","quantity","author","year","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_BOOKS","gql","QUERY_FILTERS","QUERY_USER","QUERY_CHECKOUT","BookList","useQuery","loading","data","useEffect","forEach","then","length","filter_id","key","CartItem","placeholder","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","bookIds","i","push","variables","Home","Detail","id","useParams","useState","currentBook","setCurrentBook","indexedBooks","disabled","p","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Success","addOrder","setTimeout","saveOrder","FilterMenu","filterData","Nav","href","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2a9c6051.chunk.js","sourcesContent":["import { useReducer } from 'react';\n\nimport {\n    UPDATE_BOOKS,\n    UPDATE_FILTERS,\n    UPDATE_CURRENT_FILTER,\n\n    ADD_TO_CART,\n    ADD_MULTIPLE_TO_CART,\n    REMOVE_FROM_CART,\n    UPDATE_CART_QUANTITY,\n    CLEAR_CART,\n} from './actions';\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_BOOKS:\n            return {\n                ...state,\n                books: [...action.books],\n            };\n\n        case UPDATE_FILTERS:\n            return {\n                ...state,\n                filters: [...action.filters]\n            }\n\n        case UPDATE_CURRENT_FILTER:\n            return {\n                ...state,\n                currentFilter: action.currentFilter\n            }\n\n\n\n        case ADD_TO_CART:\n            return {\n                ...state,\n                cart: [...state.cart, action.book]\n            }\n\n        case ADD_MULTIPLE_TO_CART:\n            return {\n                ...state,\n                cart: [...state.cart, ...action.books]\n            }\n\n        case REMOVE_FROM_CART:\n            let newState = state.cart.filter(book => {\n                return book._id !== action._id;\n            });\n\n            return {\n                ...state,\n                cart: newState\n            };\n\n        case UPDATE_CART_QUANTITY:\n            return {\n                ...state,\n                cart: state.cart.map(book => {\n                    if (action._id === book._id) {\n                        book.purchaseQuantity = action.purchaseQuantity;\n                    }\n                    return book;\n                })\n            };\n\n        case CLEAR_CART: \n            return {\n                ...state, \n                cart: []\n            }\n\n        // SET THIS AS DEFAULT\n        default:\n            return state;\n    }\n}\n\nexport function useBookReducer(initialState) {\n    return useReducer(reducer, initialState);\n}","export const UPDATE_BOOKS = \"UPDATE_BOOKS\";\n\nexport const UPDATE_FILTERS = \"UPDATE_FILTERS\";\nexport const UPDATE_CURRENT_FILTER = \"UPDATE_CURRENT_FILTER\"; \n\nexport const ADD_TO_CART = 'ADD_TO_CART'; \nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'; \nexport const CLEAR_CART = 'CLEAR_CART'; \nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART'; \nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY'; \n\n// FOR MOBILE DEVICES \nexport const TOGGLE_CART = 'TOGGLE_CART'; ","import React, { createContext, useContext } from \"react\";\nimport { useBookReducer } from './reducers';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\n\nconst StoreProvider = ({value = [], ...props}) => {\n    const [state, dispatch] = useBookReducer({\n        books: [],\n        cart: [],\n        filters: [],\n        currentFilter: ''\n    })\n    // console.log(state) // use this in order to confirm it works\n    return <Provider value={[state, dispatch]} {...props} />\n}\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","export function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open('textos-antiguos', 1);\n      let db, tx, store;\n      request.onupgradeneeded = function(e) {\n        const db = request.result;\n        db.createObjectStore('books', { keyPath: '_id' });\n        db.createObjectStore('filters', { keyPath: '_id' });\n        db.createObjectStore('cart', { keyPath: '_id' });\n      };\n  \n      request.onerror = function(e) {\n        console.log('There was an error');\n      };\n  \n      request.onsuccess = function(e) {\n        db = request.result;\n        tx = db.transaction(storeName, 'readwrite');\n        store = tx.objectStore(storeName);\n  \n        db.onerror = function(e) {\n          console.log('error', e);\n        };\n  \n        switch (method) {\n          case 'put':\n            store.put(object);\n            resolve(object);\n            break;\n          case 'get':\n            const all = store.getAll();\n            all.onsuccess = function() {\n              resolve(all.result);\n            };\n            break;\n          case 'delete':\n            store.delete(object._id);\n            break;\n          default:\n            console.log('No valid method');\n            break;\n        }\n  \n        tx.oncomplete = function() {\n          db.close();\n        };\n      };\n    });\n  }","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n//import { pluralize } from \"../../utils/helpers\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction BookItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const { image, description, price, name, quantity, filter, author, year,_id } = item;\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        book: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"bookItem\">\n      <Link to={`/books/${_id}`}>\n        <div className=\"bookBorder\">\n          <img alt={name} src={`/images/${image}`} />\n        </div>\n        <div className=\"info\">\n          <p className=\"price\">${price}</p>\n        </div>\n      </Link>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default BookItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_ALL_BOOKS = gql`\n    {\n        books {\n            _id\n            name\n            description\n            price\n            quantity\n            filter {\n                name\n            }\n        }\n    }\n`;\n\nexport const QUERY_BOOKS = gql`\n    query getBooks($filter: ID) {\n        books(filter: $filter) {\n            _id\n            name\n            description\n            price\n            quantity\n            image\n            filter {\n                _id\n            }\n        }\n    }\n`;\n\nexport const QUERY_FILTERS = gql`\n    {\n        filters {\n            _id\n            name\n        }\n    }\n`;\n\nexport const QUERY_USER = gql`\n    {\n        user {\n            firstName\n            lastName\n            orders {\n                _id\n                purchaseDate\n                books {\n                _id\n                name\n                description\n                price\n                quantity\n                image\n                }\n            }\n        }\n    }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n    query getCheckout($books: [ID]!) {\n        checkout(books: $books) {\n            session\n        }\n    }\n`;","import React, { useEffect } from \"react\";\nimport BookItem from \"../BookItem\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_BOOKS } from \"../../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_BOOKS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction BookList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentFilter } = state;\n\n  const { loading, data } = useQuery(QUERY_BOOKS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_BOOKS,\n        books: data.books,\n      });\n      data.books.forEach((book) => {\n        idbPromise(\"books\", \"put\", book);\n      });\n    } else if (!loading) {\n      idbPromise(\"books\", \"get\").then((books) => {\n        dispatch({\n          type: UPDATE_BOOKS,\n          books: books,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterBooks() {\n    if (!currentFilter) {\n      return state.books;\n    }\n\n    return state.books.filter((book) => book.filter_id === currentFilter);\n  }\n\n  return (\n    <div className=\"col-8\">\n      {state.books.length ? (\n        <div className=\"\">\n          {filterBooks().map((book) => (\n            <BookItem\n              key={book._id}\n              _id={book._id}\n              author={book.author}\n              year={book.year}\n              image={book.image}\n              name={book.name}\n              price={book.price}\n              description={book.description}\n              quantity={book.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>Looks like we are out of stock. Try again later !</h3>\n      )}\n      {loading ? <p>working on it !</p> : null}\n    </div>\n  );\n}\n\nexport default BookList;","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        // CHECKS IF THERE IS A SAVED TOKEN AND IT'S STILL VALID\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n                if (decoded.exp < Date.now() / 1000) {\n                    return true;\n                } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        // RETRIEVES THE USER TOKEN FROM LOCAL-STORAGE\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        // SAVES USER TOKEN TO LOCAL-STORAGE\n        localStorage.setItem('id_token', idToken);\n        window.location.assign('/');\n    }\n\n    logout() {\n        // CLEAR USER TOKEN AND PROFILE DATA FROM LOCAL-STORAGE\n        localStorage.removeItem('id_token');\n        // THIS WILL RELOAD THE PAGE AND RESET THE STATE OF THE APPLICATION\n        window.location.assign('/');\n    }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, books: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const bookIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        bookIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { books: bookIds },\n    });\n  }\n\n  return (\n    <div className=\"cart col set-width\">\n\n        {/* // only for mobile */}\n      {/* <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div> */}\n      \n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          Haven't found anything you like yet ?\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;","import React from \"react\";\n\nimport BookList from \"../components/BookList\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"h-100\">\n      <div className=\"content row h-75 com-con\">\n        <BookList />\n        <Cart />\n      </div>\n      <div className=\"about row h-25\">\n        <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis velit diam, malesuada nec luctus non, lobortis id mi. Mauris eget vulputate velit. Praesent sit amet neque ac elit mollis tristique. Pellentesque vulputate, mi ut ornare rutrum, nulla leo aliquet dolor, ac maximus nisl erat eget tellus. Aliquam bibendum mauris eget suscipit fringilla.  </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  ADD_TO_CART,\n  UPDATE_BOOKS,\n} from '../utils/actions';\nimport { QUERY_BOOKS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Detail() {\n    const [state, dispatch] = useStoreContext();\n    const { id } = useParams();\n  \n    const [currentBook, setCurrentBook] = useState({});\n  \n    const { loading, data } = useQuery(QUERY_BOOKS);\n  \n    const { books, cart } = state;\n  \n    useEffect(() => {\n      // already in global store\n      if (books.length) {\n        setCurrentBook(books.find((book) => book._id === id));\n      }\n      // retrieved from server\n      else if (data) {\n        dispatch({\n          type: UPDATE_BOOKS,\n          books: data.books,\n        });\n  \n        data.books.forEach((book) => {\n          idbPromise('books', 'put', book);\n        });\n      }\n      // get cache from idb\n      else if (!loading) {\n        idbPromise('books', 'get').then((indexedBooks) => {\n          dispatch({\n            type: UPDATE_BOOKS,\n            books: indexedBooks,\n          });\n        });\n      }\n    }, [books, data, loading, dispatch, id]);\n  \n    const addToCart = () => {\n    //  const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    //   if (itemInCart) {\n    //     dispatch({\n    //       type: UPDATE_CART_QUANTITY,\n    //       _id: id,\n    //       purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n    //     });\n    //     idbPromise('cart', 'put', {\n    //       ...itemInCart,\n    //       purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n    //     });\n    //   } else {\n        dispatch({\n          type: ADD_TO_CART,\n          book: { ...currentBook, purchaseQuantity: 1 },\n        });\n        idbPromise('cart', 'put', { ...currentBook, purchaseQuantity: 1 });\n//}\n    };\n  \n    const removeFromCart = () => {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: currentBook._id,\n      });\n  \n      idbPromise('cart', 'delete', { ...currentBook });\n    };\n  \n    return (\n      <>\n        {currentBook && cart ? (\n          <div className=\"\">\n            <Link to=\"/\">← Back to Books</Link>\n  \n            <h2>{currentBook.name}</h2>\n  \n            <p>{currentBook.description}</p>\n  \n            <p>\n              <strong>Price:</strong>${currentBook.price}{' '}\n              <button onClick={addToCart}>Add to Cart</button>\n              <button\n                disabled={!cart.find((p) => p._id === currentBook._id)}\n                onClick={removeFromCart}\n              >\n                Remove from Cart\n              </button>\n            </p>\n  \n            <img\n              src={`/images/${currentBook.image}`}\n              alt={currentBook.name}\n            />\n          </div>\n        ) : null}\n    {loading ? <p>One second !</p> : null}\n        <Cart />\n      </>\n    );\n  }\n  \n  export default Detail;","import React from \"react\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n    {/* // fun swirling text to go inside here for 404 error */}\n    </div>\n  );\n};\n\nexport default NoMatch;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n    mutation login($email: String!, $password: String!) {\n            login(email: $email, password: $password) {\n            token\n            user {\n                _id\n            }\n        }\n    }\n`;\n\nexport const ADD_ORDER = gql`\n    mutation addOrder($books: [ID]!) {\n        addOrder(books: $books) {\n            purchaseDate\n            books {\n                _id\n                name\n                description\n                price\n                quantity\n                filter {\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser(\n        $firstName: String!\n        $lastName: String!\n        $email: String!\n        $password: String!\n    ){\n        addUser(\n            firstName: $firstName\n            lastName: $lastName\n            email: $email\n            password: $password\n        ) {\n            token\n            user {\n                _id\n            }\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [login, { error }] = useMutation(LOGIN);\n  \n    const handleFormSubmit = async (event) => {\n      event.preventDefault();\n      try {\n        const mutationResponse = await login({\n          variables: { email: formState.email, password: formState.password },\n        });\n        const token = mutationResponse.data.login.token;\n        Auth.login(token);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  \n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setFormState({\n        ...formState,\n        [name]: value,\n      });\n    };\n  \n    return (\n      <div className=\"\">\n        <Link to=\"/signup\">← Go to Signup</Link>\n  \n        <h2>Login</h2>\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"\">\n            <label htmlFor=\"email\">Email address:</label>\n            <input\n              placeholder=\"please provide your email address\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"\">\n            <label htmlFor=\"pwd\">Password:</label>\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          {error ? (\n            <div>\n              <p className=\"error-text\">The provided credentials are incorrect</p>\n            </div>\n          ) : null}\n          <div className=\"\">\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n  \n  export default Login;\n  ","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [addUser] = useMutation(ADD_USER);\n  \n    const handleFormSubmit = async (event) => {\n      event.preventDefault();\n      const mutationResponse = await addUser({\n        variables: {\n          email: formState.email,\n          password: formState.password,\n          firstName: formState.firstName,\n          lastName: formState.lastName,\n        },\n      });\n      const token = mutationResponse.data.addUser.token;\n      Auth.login(token);\n    };\n  \n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setFormState({\n        ...formState,\n        [name]: value,\n      });\n    };\n  \n    return (\n      <div className=\"\">\n        <Link to=\"/login\">← Go to Login</Link>\n  \n        <h2>Signup</h2>\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"\">\n            <label htmlFor=\"firstName\">First Name:</label>\n            <input\n              placeholder=\"First\"\n              name=\"firstName\"\n              type=\"firstName\"\n              id=\"firstName\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"\">\n            <label htmlFor=\"lastName\">Last Name:</label>\n            <input\n              placeholder=\"Last\"\n              name=\"lastName\"\n              type=\"lastName\"\n              id=\"lastName\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              placeholder=\"please provide your email address\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"\">\n            <label htmlFor=\"pwd\">Password:</label>\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=''>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n  \n  export default Signup;\n  ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n    const { data } = useQuery(QUERY_USER);\n    let user;\n  \n    if (data) {\n      user = data.user;\n    }\n  \n    return (\n      <>\n        <div className=\"\">\n          <Link to=\"/\">← Back to Books</Link>\n  \n          {user ? (\n            <>\n              <h2>\n                Order History for {user.firstName} {user.lastName}\n              </h2>\n              {user.orders.map((order) => (\n                <div key={order._id} className=\"\">\n                  <h3>\n                    {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                  </h3>\n                  <div className=\"\">\n                    {order.books.map(({ _id, image, name, price }, index) => (\n                      <div key={index} className=\"\">\n                        <Link to={`/books/${_id}`}>\n                          <img alt={name} src={`/assets/${image}`} />\n                          <p>{name}</p>\n                        </Link>\n                        <div>\n                          <span>${price}</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n  \n  export default OrderHistory;","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success(){\n    const [addOrder] = useMutation(ADD_ORDER);\n\n    useEffect(() => {\n      async function saveOrder() {\n        const cart = await idbPromise('cart', 'get');\n        const books = cart.map((item) => item._id);\n  \n        if (books.length) {\n          const { data } = await addOrder({ variables: { books } });\n          const bookData = data.addOrder.books;\n  \n          bookData.forEach((item) => {\n            idbPromise('cart', 'delete', item);\n          });\n        }\n  \n        setTimeout(() => {\n          window.location.assign('/');\n        }, 3000);\n      }\n  \n      saveOrder();\n    }, [addOrder]);\n  \n    return (\n      <div>\n  {/* // fun swirling text and animations that state order was successful */}\n        \n      </div>\n    );\n}\n\nexport default Success;","import React, { useEffect, useSyncExternalStore } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_FILTERS, UPDATE_CURRENT_FILTER } from \"../../utils/actions\";\nimport { QUERY_FILTERS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction FilterMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { filters } = state;\n\n  const { loading, data: filterData } = useQuery(QUERY_FILTERS);\n\n  useEffect(() => {\n    if (filterData) {\n      dispatch({\n        type: UPDATE_FILTERS,\n        filters: filterData.filters,\n      });\n      filterData.filters.forEach((filter) => {\n        idbPromise(\"filters\", \"put\", filter);\n      });\n    } else if (!loading) {\n      idbPromise(\"filters\", \"get\").then((filters) => {\n        dispatch({\n          type: UPDATE_FILTERS,\n          filters: filters,\n        });\n      });\n    }\n  }, [filterData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_FILTER,\n      currentFilter: id,\n    });\n  };\n\n  return(\n    <div>\n      <ul>\n        {filters.map((item) => (\n          <li>\n            <button\n              className=\"filter-btn\"\n              key={item._id}\n              onClick={() => {\n                handleClick(item._id);\n              }}\n            >\n              {item.name}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default FilterMenu;","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nimport FilterMenu from \"../FilterMenu\";\nimport './style.css'\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"under\">\n          <li>\n            <Link to=\"/orderHistory\">Order History</Link>\n          </li>\n          <li>\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"under\">\n          <li className=\"spacing\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"spacing\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1 className=\"logo\">\n        <Link to=\"/\">\n          TEXTOS ANTIGUOS \n        </Link>\n      </h1>\n\n      <nav>\n          {showNavigation()}\n          <FilterMenu />\n      </nav>\n\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { StoreProvider } from \"./utils/GlobalState\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\n\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport OrderHistory from './pages/OrderHistory';\nimport Success from './pages/Success'\n\nimport Nav from './components/Nav';\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"row h-100 page-bg\">\n          <StoreProvider>\n            <div className=\"side-menu col-3 com-con\">\n              <Nav />\n            </div>\n            <div className=\"main-page col-9\">\n              <Switch>\n              <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={Signup} />\n                <Route exact path=\"/orderHistory\" component={OrderHistory} />\n                <Route exact path=\"/books/:id\" component={Detail} />\n                <Route exact path=\"/success\" component={Success} />\n                <Route component={NoMatch} />\n              </Switch>\n            </div>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (\n        process.env.NODE_ENV === 'production' &&\n        'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated pre-cached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}